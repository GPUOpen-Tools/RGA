<Application x:Class="DXR_State_Editor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DXR_State_Editor"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <BitmapImage x:Key="trashCanImageResource" UriSource="/Resources/trashCanImage.png" />

        <!--Base Button Style-->
        <Style x:Key="baseButtonStyle" TargetType="Button">
            <!--Font-->
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="FontSize" Value="15" />

            <!--Width, Height, Border, Alignment-->
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <!--Primary Button Style-->
        <Style x:Key="primaryButtonStyle" BasedOn="{StaticResource baseButtonStyle}" TargetType="Button">
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="Background" Value="#2a57bf"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="MinWidth" Value="135"/>
            <Setter Property="MaxHeight" Value="35"/>
            <Setter Property="MaxWidth" Value="265"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>

            <!--Override Button Hover Color-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Secondary Button Style-->
        <Style x:Key="secondaryButtonStyle" BasedOn="{StaticResource baseButtonStyle}" TargetType="Button">
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="Background" Value="#FF303030"/>

            <!--Override Button Hover Color-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2a57bf"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Application Mode Button Style-->
        <Style x:Key="AppModeButtonStyle" BasedOn="{StaticResource baseButtonStyle}" TargetType="Button">
            <Setter Property="BorderBrush" Value="#FFFFFFFF"/>
            <Setter Property="Margin" Value="0, 0, 0, 1.5"/>

            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="Background" Value="#2a57bf"/>

            <!--Override Button Hover Color-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Clicked Button Style-->
        <Style x:Key="selectedButtonStyle" BasedOn="{StaticResource baseButtonStyle}" TargetType="Button">
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="Background" Value="#FF252525"/>

            <!--Override Button Hover Color-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Browse Button Style-->
        <Style x:Key="browseButtonStyle" BasedOn="{StaticResource baseButtonStyle}" TargetType="Button">
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="Background" Value="#2a57bf"/>
            <Setter Property="Content" Value="Browse"/>

            <!--Override Button Hover Color-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Remove Item Button Style-->
        <Style x:Key="removeItemButtonStyle" BasedOn="{StaticResource baseButtonStyle}" TargetType="Button">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="Background" Value="#FF202020"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <!--Override Button Hover Color-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF303030"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Base Label Style-->
        <Style x:Key="baseLabelStyle" TargetType="Label">
            <!--Font-->
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="FontSize" Value="15" />

            <!--Width, Height, Border, Alignment-->
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="20, 5, 5, 20"/>
            <Setter Property="MinHeight" Value="35"/>
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="Width" Value="20"/>
        </Style>

        <!--Base ComboBox Style-->
        <Style x:Key="baseComboBoxStyle" TargetType="ComboBox">
            <!--Font-->
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="FontSize" Value="15" />

            <!--Width, Height, Border, Alignment-->
            <Setter Property="BorderThickness" Value="3" />
            <!--<Setter Property="BorderBrush" Value="#FFDD0031" />-->
            <Setter Property="BorderBrush" Value="#2a57bf"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <!--Base TextBox Style-->
        <Style x:Key="baseTextBoxStyle" TargetType="TextBox">
            <!--Font-->
            <Setter Property="Background" Value="#FF202020"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="FontSize" Value="15" />

            <!--Width, Height, Border, Alignment-->
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="BorderBrush" Value="#2a57bf"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <!--Override TextBox Hover Color-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF9191B1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ERROR (General) TextBox Style-->
        <Style x:Key="errorTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource baseTextBoxStyle}">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="FontWeight" Value="ExtraBold"/>
            <Setter Property="BorderBrush" Value="#FFFF0000"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFFF0000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ERROR (Default/Invalid) TextBox Style-->
        <Style x:Key="defaultYetInvalidTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource baseTextBoxStyle}">
            <Setter Property="Foreground" Value="#FFAAAAAA"/>
            <Setter Property="FontWeight" Value="ExtraBold"/>
        </Style>

        <!--Quick Title Style-->
        <Style x:Key="quickTitleStyle" TargetType="TextBlock">
            <!--Font-->
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>

            <!--Width, Height, Border, Alignment-->
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Width" Value="auto"/>
        </Style>

        <!--Quick Description Style-->
        <Style x:Key="quickDescriptionStyle" TargetType="TextBlock">
            <!--Font-->
            <Setter Property="Foreground" Value="#FFAAAAAA"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>

            <!--Width, Height, Border, Alignment-->
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Width" Value="auto"/>
        </Style>

        <!--JSON TextBox Style-->
        <Style x:Key="jsonTextStyle" TargetType="TextBox">
            <!--Font-->
            <Setter Property="Background" Value="#FF333333"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="15" />

            <!--Width, Height, Border, Alignment-->
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="BorderThickness" Value="0, 0, 0, 0" />
            <Setter Property="Margin" Value="15, 15, 15, 15"/>
        </Style>

        <!--Separator Style-->
        <Style x:Key="separatortStyle_visible" TargetType="Separator">
            <Setter Property="BorderThickness" Value="0, 0, 0, 1.5"/>
            <Setter Property="BorderBrush" Value="#2a57bf"/>
            <Setter Property="Margin" Value="0, 0, 0, 20"/>
            <Setter Property="Visibility" Value="Visible"/>
        </Style>

        <Style x:Key="separatortStyle_invisible" TargetType="Separator">
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>

        <Grid x:Key="trashCanImage">
            <Image Source="Resources/trashCan.bmp"/>
        </Grid>

    </Application.Resources>
</Application>
